version: '3.8'

services:
  # Aplicación AFIP App
  afip-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: afip-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      # Variables de entorno para AFIP (configurar según necesidad)
      - NEXT_PUBLIC_IFACTURA_EMAIL=${IFACTURA_EMAIL:-}
      - NEXT_PUBLIC_IFACTURA_PASSWORD=${IFACTURA_PASSWORD:-}
    volumes:
      # Volumen para persistir datos de clientes (localStorage)
      - afip_data:/app/data
    networks:
      - afip-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx como reverse proxy (opcional)
  nginx:
    image: nginx:alpine
    container_name: afip-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - afip-app
    networks:
      - afip-network
    profiles:
      - nginx

  # Redis para caché (opcional)
  redis:
    image: redis:7-alpine
    container_name: afip-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - afip-network
    profiles:
      - cache

volumes:
  afip_data:
    driver: local
  redis_data:
    driver: local

networks:
  afip-network:
    driver: bridge 